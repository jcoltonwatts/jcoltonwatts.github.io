ggplot(aes(x = species, y = pengPlumpInd, group_by = sex)) +geom_boxplot(colors = groups)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, group_by = sex)) +geom_boxplot(colors = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, group_by = sex)) +geom_boxplot(color = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, group_by = sex)) +geom_boxplot(color = groups)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) +geom_boxplot(color = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(color = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) %>%  geom_boxplot(color = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(group = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(.,group = sex)
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm)
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(group = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, groups = sex)) + geom_boxplot(aes(group = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(group = sex)) + facet_wrap
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(group = sex)) + facet_wrap()
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(group = sex)) + facet_wrap(facets = ~)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(group = sex)) + facet_wrap(facets = groups)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(group = sex)) + facet_wrap(facets = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot()
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(fill = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot()
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, group = sex)) + geom_boxplot()
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = sex, y = pengPlumpInd, group = species)) + geom_boxplot()
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, by = sex)) + geom_boxplot()
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, by = sex)) + geom_boxplot(fill = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, by = sex)) + geom_boxplot(fill = groups)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, by = sex)) + geom_boxplot(color = sex)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, by = sex)) + geom_boxplot(color = groups)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd, by = sex)) + geom_boxplot(aes(color = sex))
ggplot(aes(x = species, y = pengPlumpInd) + geom_boxplot(aes(color = sex))
)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(sex) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(color = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(sex) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(color = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(sex) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot()
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(sex) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(color = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(color = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# the first term just sets up the plot object by saying what the x, y, and grouping variables will be.
# the second term species a "layer" of the objects appearance-- in this case, a boxplot that is colored by sex.
# Note that we don't have to specify our data set for either argument because it is inherited from the pipe.
# Also note that we don't have to re-specify our x, y, and grouping variable in geom_bopxlot because it inherits
# these from the first term (unless we tell it otherwise).
ggplot(aes(x = species, y = pengPlumpInd, by = sex)) + geom_boxplot()
```{r echo = TRUE}
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# the first term just sets up the plot object by saying what the x, y, and grouping variables will be.
# the second term specifies a "layer" of the plot's appearance-- in this case, a boxplot.
# Note that we don't have to specify our data set for either argument because it is inherited from the pipe.
# Also note that we don't have to re-specify our x, y, and grouping variable in geom_bopxlot because it inherits
# these from the first term (unless we tell it otherwise).
ggplot(aes(x = species, y = pengPlumpInd, by = sex)) + geom_boxplot(aes(color = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(color = sex)) %>% group_by(island)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(island) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(color = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(island) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(color = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(island) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(color = sex)) +facet_wrap(facets = island)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(island) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = pengPlumpInd)) + geom_boxplot(aes(color = sex)) +facet_wrap(~island)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(island) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = mean_body_mass_g)) + geom_boxplot(aes(color = sex)) +facet_wrap(~island)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
group_by(island) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = body_mass_g)) + geom_boxplot(aes(color = sex)) +facet_wrap(~island)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# This time, specify that boxplots should differ in color depending on sex.
ggplot(aes(x = species, y = pengPlumpInd, by = sex)) +
geom_boxplot(aes(color = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = pengPlumpInd)) +
geom_boxplot(aes(color = sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = pengPlumpInd)) +
geom_boxplot(aes(color = sex)) +
xlabel("Species") +
ylabel("Penguin Plumpness Index (PPI)")
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = pengPlumpInd)) +
geom_boxplot(aes(color = sex)) +
xlab("Species") +
ylab("Penguin Plumpness Index (PPI)")
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
select(species == "Adelie") %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = body_mass_g)) + geom_boxplot(aes(color = sex)) +facet_wrap(~island)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
select(species == "Adelie") %>%
# use ggplot() to plot PPI for each species, grouped by sex.
# Can omit the "by" argument in ggplot() because we apply colors by the same grouping structure in geom_boxplot.
ggplot(aes(x = species, y = body_mass_g)) + geom_boxplot(aes(color = sex)) +facet_wrap(~island)
filter(penguins, !is.na(sex))
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex) & species == "Adelie") %>%
ggplot(aes(x = species, y = body_mass_g)) + geom_boxplot(aes(color = sex)) +facet_wrap(~island)
print(penguins)
penguins %>% pivot_wider(names_from = year, values_from = bill_lenth_mm)
penguins %>% pivot_wider(names_from = year, values_from = bill_length_mm)
print(penguins_raw)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>%
# sort by descending body mass to get largest at top -- careful that we sort on the new summary variables, not theoriginal variables!
arrange(desc(meanBodyMassg))
Let's try taking names from the variable `island` and values from the variable `meanBodyMassg`.
q
)))
penguins %>% pivot_wider(names_from = island, values_from = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>%
# sort by descending body mass to get largest at top -- careful that we sort on the new summary variables, not theoriginal variables!
arrange(desc(meanBodyMassg)) %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>%
# sort by descending body mass to get largest at top -- careful that we sort on the new summary variables, not theoriginal variables!
arrange(desc(meanBodyMassg)) %>% ungroup() %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>% ungroup() %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n())
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>% ungroup() %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = sex, values_from = meanBodyMassg)
island
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>% ungroup() %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>%
select(island, sex, meanBodyMassg) %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>%
# be sure to select *only* the variables you need in your wider table, else things will get messy.
select(island, sex, meanBodyMassg) %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>%
# be sure to select *only* the variables you need in your wider table, else things will get messy.
select(island, sex, meanBodyMassg) %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg) %>%
pivot_longer(cols = c(Biscoe, Dream, Torgersen), names_to = island, values_to = meanBodyMassg)
# filter() to remove rows where sex is NA,
filter(penguins, !is.na(sex)) %>%
# mutate() to calculate penguin plumpness index from body mass and flipper length
mutate(pengPlumpInd = body_mass_g / flipper_length_mm) %>%
# group data by sex
group_by(species, island, sex) %>%
# summarize groups in terms of mean body manss, sd in body mass, mean PPI, and sd in PPI
summarize(meanBodyMassg = mean(body_mass_g),
sdBodyMassg = sd(body_mass_g),
CVBodyMassg = sdBodyMassg / meanBodyMassg,
meanPPI = mean(pengPlumpInd),
sdPPI = sd(pengPlumpInd),
sampleSize = n()) %>%
# be sure to select *only* the variables you need in your wider table, else things will get messy.
select(island, sex, meanBodyMassg) %>%
# use pivot_wider() to turn values of island into their own columns, with the corresponding value of mean body mass contained in each.
pivot_wider(names_from = island, values_from = meanBodyMassg) %>%
pivot_longer(cols = c(Biscoe, Dream, Torgersen), names_to = "island", values_to = "meanBodyMassg")
# filter penguins to remove rows for which sex is unknown, then group the data by sex, and then calculate mean body mass for each group.
filter(penguins, !is.na(sex)) %>% group_by(sex) %>% summarize(meanBodyMassg = mean(body_mass_g))
